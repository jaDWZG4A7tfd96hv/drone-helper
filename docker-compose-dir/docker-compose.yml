version: '3'

services:

  drone-server:
    image: drone/drone:latest
    container_name: drone-server
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/lib/drone:/var/lib/drone/
    restart: always
    environment:
      - DRONE_OPEN=false
      - DRONE_HOST=http://drone-server:9000
      - DRONE_SECRET=docker
      - DRONE_GITEA=true
      - DRONE_GITEA_URL=http://gogs:3000
      - DRONE_ADMIN=docker
      - DRONE_NETWORK=gitea-network
    networks:
      - default

  drone-agent:
    image: drone/agent:latest
    container_name: drone-agent
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=docker
      - DRONE_NETWORK=primary_network
    networks:
      - default

  gogs:
    image: gitea/gitea:1.4.1
    container_name: gogs
    volumes:
      - ./data:/data
    ports:
      - "3000:3000"
      - "22222:22"
    depends_on:
      - db
    restart: always
    networks:
      - default
    extra_hosts:
      - "drone-serverTest:162.242.195.82"
      - "otherhost:50.31.209.229"

  db:
    image: mariadb:10
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=docker
      - MYSQL_DATABASE=docker
      - MYSQL_USER=docker
      - MYSQL_PASSWORD=docker
    volumes:
      - ./db/:/var/lib/mysql
    network_mode: bridge

  dnsmasq:
    image: andyshinn/dnsmasq:2.75
    ports: 
    - 172.17.0.1:53:53/tcp 
    - 172.17.0.1:53:53/udp 
    cap_add:
    - NET_ADMIN
    restart: always
    network_mode: bridge


networks:
  default:
    external:
      name: gitea-network
